name: deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose environment'
        required: true
        type: choice
        options:
          - Development

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      # ✅ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Set up .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # ✅ Build and publish
      - name: Build and publish the API
        run: |
          cd code/src/FinanceManager.API
          dotnet restore
          dotnet build --configuration Release --no-restore
          dotnet publish -c Release -o ./publish

      # ✅ Upload artifacts for deployment
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-publish
          path: code/src/FinanceManager.API/publish

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # ✅ Download build artifact
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: api-publish
          path: ./publish

      # ✅ Add EC2 host key to known_hosts
      - name: Add EC2 host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # ✅ Upload to EC2
      - name: Upload artifact to EC2
        run: |
          scp -i ${{ secrets.EC2_SSH_KEY }} -o StrictHostKeyChecking=no -r ./publish/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/api-deploy

      # ✅ Deploy via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # ✅ Stop the existing service
            sudo systemctl stop kestrel-api || true

            # ✅ Create deployment directory if missing
            sudo mkdir -p /var/www/ec2-expense-manager-api
            sudo chown -R www-data:www-data /var/www/ec2-expense-manager-api
            sudo chmod -R 755 /var/www/ec2-expense-manager-api

            # ✅ Deploy the new version
            sudo rm -rf /var/www/ec2-expense-manager-api/*
            sudo mv /home/${{ secrets.EC2_USER }}/api-deploy/* /var/www/ec2-expense-manager-api/

            # ✅ Restart and verify the service
            sudo systemctl daemon-reload
            sudo systemctl start kestrel-api
            sudo systemctl status kestrel-api

            # ✅ Display recent logs for debugging
            sudo journalctl -u kestrel-api --no-pager -n 50
