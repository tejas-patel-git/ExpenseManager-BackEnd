{
	"info": {
		"_postman_id": "1f8ce10e-453d-4c40-aaa4-8aeb17a24e60",
		"name": "Finanace Manager",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Transaction",
			"item": [
				{
					"name": "get transaction by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13168e85-b43d-4252-9af5-048b6212c307",
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"TransactionID is a non-negative integer\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.transactionID).to.exist.and.to.be.a('number').and.to.satisfy((value) => value >= 0, \"TransactionID should be a non-negative integer\");",
									"});",
									"",
									"",
									"pm.test(\"Amount is a non-negative number\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.amount).to.be.a('number');",
									"    pm.expect(responseData.amount).to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Date is in a valid date format\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.date).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "54621cad-c0db-4916-904f-986de3431747",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/transaction?id=8a8e06db-f848-43bb-b47c-1b3844413237",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transaction"
							],
							"query": [
								{
									"key": "id",
									"value": "8a8e06db-f848-43bb-b47c-1b3844413237"
								}
							]
						},
						"description": "Retrieves a transaction by its ID."
					},
					"response": []
				},
				{
					"name": "get all transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13168e85-b43d-4252-9af5-048b6212c307",
								"exec": [
									"pm.test(\"Check if all transactions in 'data' have required fields\", function () {",
									"    const responseJson = pm.response.json();",
									"    ",
									"    // Loop through each transaction in the 'data' array",
									"    responseJson.data.forEach(function(transaction) {",
									"        pm.test(`Transaction with ID ${transaction.transactionId} should have required fields`, function () {",
									"            pm.expect(transaction).to.have.property(\"transactionId\").that.is.a('string').that.is.not.empty; // Ensure 'transactionId' is a non-empty string",
									"            pm.expect(transaction).to.have.property(\"isExpense\").that.is.a('boolean'); // Ensure 'isExpense' is a boolean",
									"            pm.expect(transaction).to.have.property(\"amount\").that.is.a('number'); // Ensure 'amount' is a number and matches the value",
									"            pm.expect(transaction).to.have.property(\"date\").that.is.a('string'); // Ensure 'date' matches the sent value",
									"            pm.expect(transaction).to.have.property(\"description\").that.is.a('string'); // Ensure 'description' is a non-empty string",
									"        });",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "477d5fe0-6c71-4962-bdb3-2954bafcca3a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/transaction",
						"description": "Retrieves a transaction by its ID."
					},
					"response": []
				},
				{
					"name": "add new transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06716b22-52f9-4922-8287-b640cca094db",
								"exec": [
									"pm.test(\"Check if the request is successful\", function () {",
									"    pm.response.to.have.status(200);  // Verify that the response status is 200 OK",
									"});",
									"",
									"",
									"// Test Case: Verify response data values",
									"pm.test(\"Verify response data values\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data.isExpense).to.equal(false);",
									"    pm.expect(responseJson.data.amount).to.equal(50);",
									"    pm.expect(responseJson.data.date).to.equal(\"2024-11-01T10:00:00\");",
									"    pm.expect(responseJson.data.description).to.equal(\"Grocery Shopping\");",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"pm.environment.set(\"transaction_id\", responseJson.data.transactionId);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "dd40dade-a765-43ef-95bb-ea596207cca3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"isExpense\": false,\n    \"amount\": 50.00,\n    \"date\": \"2024-11-01T10:00:00\",\n    \"description\": \"Grocery Shopping\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/transaction",
						"description": "Adds a new transaction."
					},
					"response": []
				},
				{
					"name": "update transaction",
					"id": "96b68887-8c85-4791-8059-fe7c5b970b64",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"isExpense\": false,\n    \"amount\": 50.00,\n    \"date\": \"2024-11-01T10:00:00\",\n    \"description\": \"Test Grocery Shopping\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/transaction/?id=8a8e06db-f848-43bb-b47c-1b3844413237",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transaction",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "8a8e06db-f848-43bb-b47c-1b3844413237"
								}
							]
						},
						"description": "Updates an existing transaction."
					},
					"response": []
				},
				{
					"name": "delete transaction",
					"id": "9051ceec-f87d-4231-9cd5-4968600b4c09",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/transaction/?id=E0BA8E58-C0D0-4568-8F5C-EF1B9FD364A4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transaction",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "E0BA8E58-C0D0-4568-8F5C-EF1B9FD364A4"
								}
							]
						},
						"description": "Deletes a transaction by its ID."
					},
					"response": []
				}
			],
			"id": "de11a272-4942-4526-adc2-a70780a2f60d"
		},
		{
			"name": "Balance",
			"item": [
				{
					"name": "get current balance",
					"id": "5ff1fb21-a809-4ec7-9538-ef64d5db81ea",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": "{{base_url}}/balance"
					},
					"response": []
				}
			],
			"id": "3c6b0de2-daab-4a8b-bc55-ce8576c0b3b5"
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User - Post Registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "971249d2-1ab0-49de-b403-7e51fe7df71f",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "095c974d-110d-4780-84e4-ff2390528182",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Email\": \"fm-test-01@gmail.com\",\r\n    \"PhoneNumber\": \"123-456-7890\",\r\n    \"UserId\": \"auth0|5f7c8ec7c33c6c004bbafe82\",\r\n    \"CreatedAt\": \"2025-01-01T14:00:06.130Z\",\r\n    \"IsEmailVerified\": false,\r\n    \"FamilyName\": \"Doe\",\r\n    \"GivenName\": \"John\",\r\n    \"LastPasswordReset\": \"2025-01-01T14:00:06.130Z\",\r\n    \"FullName\": \"John Doe\",\r\n    \"Nickname\": \"johndoe\",\r\n    \"IsPhoneVerified\": false,\r\n    \"PictureUrl\": \"http://www.gravatar.com/avatar/?d=identicon\",\r\n    \"UpdatedAt\": \"2025-01-01T14:00:06.130Z\",\r\n    \"AppMetadata\": \"{}\",\r\n    \"UserMetadata\": \"{}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/user/register"
					},
					"response": []
				}
			],
			"id": "32d156a8-666a-4745-b488-c592becda5b3",
			"auth": {
				"type": "apikey",
				"apikey": {
					"value": "{{vault:auth0-provider-api-key}}",
					"key": "X-Api-Key"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7ee27ea1-9449-4f58-8218-2684bd054a4f",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "47910316-8370-452f-bde6-94d95399fc28",
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "add account",
					"id": "a6d140ed-c170-4d40-9c40-d0af0b681564",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountName\": \"accounNameTest\",\n  \"accountNumber\": \"12345\",\n  \"bankName\": 1,\n  \"accountType\": 1,\n  \"balance\": 10.6\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/Accounts"
					},
					"response": []
				},
				{
					"name": "get account by id",
					"id": "584ee2e2-cc39-4244-b071-c7e7d0a50367",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{base_url}}/accounts?id=BD9F720D-B61B-4515-ACBD-77436FFA44B9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts"
							],
							"query": [
								{
									"key": "id",
									"value": "BD9F720D-B61B-4515-ACBD-77436FFA44B9"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get all accounts by user",
					"id": "e348c56e-e983-43ed-b7f3-93ab217ebc75",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": "{{base_url}}/accounts"
					},
					"response": []
				},
				{
					"name": "update account",
					"id": "74b4902a-cd00-440f-a716-ea977bda5291",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountName\": \"accounNameTestUpdate\",\n  \"accountNumber\": \"12345\",\n  \"bankName\": 0,\n  \"accountType\": 1,\n  \"balance\": 10.6\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/accounts/?id=B569B0DA-930C-4134-5C40-08DD2EE6E4B3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "B569B0DA-930C-4134-5C40-08DD2EE6E4B3"
								}
							]
						},
						"description": "Updates an existing transaction."
					},
					"response": []
				},
				{
					"name": "delete account",
					"id": "dcd2b8b2-dec6-4afb-b741-c3bdade1ec07",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/accounts/?id=BD9F720D-B61B-4515-ACBD-77436FFA44B9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "BD9F720D-B61B-4515-ACBD-77436FFA44B9"
								}
							]
						},
						"description": "Deletes a transaction by its ID."
					},
					"response": []
				}
			],
			"id": "a76d54de-f23f-4a7a-8e35-76d4057579c4"
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": {
			"grant_type": "implicit",
			"refreshTokenUrl": "{{vault:oauth-auth-url}}",
			"scope": "",
			"authRequestParams": [
				{
					"key": "audience",
					"value": "{{vault:audience-dev}}",
					"enabled": true,
					"send_as": "request_url"
				}
			],
			"client_authentication": "body",
			"tokenRequestParams": [
				{
					"key": "audience",
					"value": "{{vault:audience-dev}}",
					"enabled": true,
					"send_as": "request_url"
				}
			],
			"clientSecret": "{{vault:client-secret-web-dev}}",
			"state": "1234",
			"redirect_uri": "http://localhost:5277",
			"clientId": "{{vault:client-id-web-dev}}",
			"useBrowser": false,
			"authUrl": "{{vault:oauth-auth-url}}",
			"accessTokenUrl": "{{vault:oauth-token-url}}",
			"addTokenTo": "header"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "eff51996-c78e-4a61-8fbb-efafbc75934d",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f10ac0a4-5105-46db-a75c-b300f6dd19a4",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5277/api"
		}
	]
}